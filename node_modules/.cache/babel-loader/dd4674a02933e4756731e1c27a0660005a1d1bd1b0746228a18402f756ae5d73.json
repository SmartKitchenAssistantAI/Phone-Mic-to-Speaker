{"ast":null,"code":"import React,{useState,useRef,useEffect}from'react';import'./App.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[isActive,setIsActive]=useState(false);const[volume,setVolume]=useState(1);const[level,setLevel]=useState(0);const[status,setStatus]=useState('Ready to connect');const[error,setError]=useState(false);// Refs for audio processing\nconst audioContextRef=useRef(null);const micStreamRef=useRef(null);const micSourceRef=useRef(null);const gainNodeRef=useRef(null);const analyserRef=useRef(null);const animationFrameRef=useRef(null);// Start audio processing\nconst startAudio=async()=>{try{// Create audio context\naudioContextRef.current=new(window.AudioContext||window.webkitAudioContext)();// Get mic access\nmicStreamRef.current=await navigator.mediaDevices.getUserMedia({audio:{echoCancellation:false,noiseSuppression:false,autoGainControl:false}});// Create audio source from mic\nmicSourceRef.current=audioContextRef.current.createMediaStreamSource(micStreamRef.current);// Create gain node for volume control\ngainNodeRef.current=audioContextRef.current.createGain();gainNodeRef.current.gain.value=volume;// Create analyzer for level meter\nanalyserRef.current=audioContextRef.current.createAnalyser();analyserRef.current.fftSize=256;// Connect nodes: mic -> gain -> analyzer -> output\nmicSourceRef.current.connect(gainNodeRef.current);gainNodeRef.current.connect(analyserRef.current);gainNodeRef.current.connect(audioContextRef.current.destination);// Start level meter visualization\nupdateLevelMeter();// Update UI\nsetIsActive(true);setStatus('Microphone active - sending to speaker');setError(false);}catch(err){console.error('Error accessing microphone:',err);setStatus(`Error: ${err.message}`);setError(true);setIsActive(false);}};// Stop audio processing\nconst stopAudio=()=>{if(micStreamRef.current){micStreamRef.current.getTracks().forEach(track=>track.stop());}if(audioContextRef.current){audioContextRef.current.close();}// Cancel animation frame\nif(animationFrameRef.current){cancelAnimationFrame(animationFrameRef.current);animationFrameRef.current=null;}// Reset variables\naudioContextRef.current=null;micStreamRef.current=null;micSourceRef.current=null;gainNodeRef.current=null;analyserRef.current=null;// Update UI\nsetIsActive(false);setStatus('Ready to connect');setError(false);setLevel(0);};// Update level meter based on mic input\nconst updateLevelMeter=()=>{if(!analyserRef.current||!isActive)return;const bufferLength=analyserRef.current.frequencyBinCount;const dataArray=new Uint8Array(bufferLength);const draw=()=>{animationFrameRef.current=requestAnimationFrame(draw);analyserRef.current.getByteFrequencyData(dataArray);// Calculate volume level (average of all frequencies)\nlet sum=0;for(let i=0;i<bufferLength;i++){sum+=dataArray[i];}const average=sum/bufferLength;// Update level meter (0-100%)\nconst newLevel=Math.min(100,Math.max(0,average*100/256));setLevel(newLevel);};draw();};// Toggle mic on/off\nconst toggleMicrophone=()=>{if(isActive){stopAudio();}else{startAudio();}};// Update volume when slider changes\nuseEffect(()=>{if(gainNodeRef.current){gainNodeRef.current.gain.value=volume;}},[volume]);// Handle page visibility changes\nuseEffect(()=>{const handleVisibilityChange=()=>{if(document.hidden&&isActive){stopAudio();setStatus('Paused - return to this page to resume');}};document.addEventListener('visibilitychange',handleVisibilityChange);return()=>{document.removeEventListener('visibilitychange',handleVisibilityChange);};},[isActive]);// Clean up on unmount\nuseEffect(()=>{return()=>{if(isActive){stopAudio();}};},[isActive]);return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Phone Mic to Speaker\"}),/*#__PURE__*/_jsx(\"div\",{className:`status ${isActive?'connected':''} ${error?'error':''}`,children:status}),/*#__PURE__*/_jsx(\"button\",{className:`mic-button ${isActive?'recording':''}`,onClick:toggleMicrophone,children:/*#__PURE__*/_jsx(\"svg\",{className:\"mic-icon\",viewBox:\"0 0 24 24\",children:/*#__PURE__*/_jsx(\"path\",{d:\"M12,2A3,3 0 0,1 15,5V11A3,3 0 0,1 12,14A3,3 0 0,1 9,11V5A3,3 0 0,1 12,2M19,11C19,14.53 16.39,17.44 13,17.93V21H11V17.93C7.61,17.44 5,14.53 5,11H7A5,5 0 0,0 12,16A5,5 0 0,0 17,11H19Z\"})})}),/*#__PURE__*/_jsx(\"div\",{className:\"level-meter\",children:/*#__PURE__*/_jsx(\"div\",{className:\"level-fill\",style:{width:`${level}%`}})}),/*#__PURE__*/_jsxs(\"div\",{className:\"volume-control\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"volumeSlider\",children:\"Microphone Volume\"}),/*#__PURE__*/_jsx(\"input\",{type:\"range\",min:\"0\",max:\"2\",step:\"0.1\",value:volume,className:\"volume-slider\",id:\"volumeSlider\",onChange:e=>setVolume(parseFloat(e.target.value))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"instructions\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"How to use:\"}),/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsx(\"li\",{children:\"Connect your Bluetooth/USB/aux speaker to your device\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Tap the microphone button to start/stop\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Adjust the volume slider as needed\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Your microphone input will play through the connected speaker\"})]})]}),/*#__PURE__*/_jsx(\"footer\",{children:\"Note: On mobile devices, this will only work while this page is open and active.\"})]});}export default App;","map":{"version":3,"names":["React","useState","useRef","useEffect","jsx","_jsx","jsxs","_jsxs","App","isActive","setIsActive","volume","setVolume","level","setLevel","status","setStatus","error","setError","audioContextRef","micStreamRef","micSourceRef","gainNodeRef","analyserRef","animationFrameRef","startAudio","current","window","AudioContext","webkitAudioContext","navigator","mediaDevices","getUserMedia","audio","echoCancellation","noiseSuppression","autoGainControl","createMediaStreamSource","createGain","gain","value","createAnalyser","fftSize","connect","destination","updateLevelMeter","err","console","message","stopAudio","getTracks","forEach","track","stop","close","cancelAnimationFrame","bufferLength","frequencyBinCount","dataArray","Uint8Array","draw","requestAnimationFrame","getByteFrequencyData","sum","i","average","newLevel","Math","min","max","toggleMicrophone","handleVisibilityChange","document","hidden","addEventListener","removeEventListener","className","children","onClick","viewBox","d","style","width","htmlFor","type","step","id","onChange","e","parseFloat","target"],"sources":["C:/Users/arjun/Desktop/phone-mic-to-speaker/src/app.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [isActive, setIsActive] = useState(false);\r\n  const [volume, setVolume] = useState(1);\r\n  const [level, setLevel] = useState(0);\r\n  const [status, setStatus] = useState('Ready to connect');\r\n  const [error, setError] = useState(false);\r\n\r\n  // Refs for audio processing\r\n  const audioContextRef = useRef(null);\r\n  const micStreamRef = useRef(null);\r\n  const micSourceRef = useRef(null);\r\n  const gainNodeRef = useRef(null);\r\n  const analyserRef = useRef(null);\r\n  const animationFrameRef = useRef(null);\r\n\r\n  // Start audio processing\r\n  const startAudio = async () => {\r\n    try {\r\n      // Create audio context\r\n      audioContextRef.current = new (window.AudioContext || window.webkitAudioContext)();\r\n      \r\n      // Get mic access\r\n      micStreamRef.current = await navigator.mediaDevices.getUserMedia({ \r\n        audio: { \r\n          echoCancellation: false,\r\n          noiseSuppression: false,\r\n          autoGainControl: false\r\n        } \r\n      });\r\n      \r\n      // Create audio source from mic\r\n      micSourceRef.current = audioContextRef.current.createMediaStreamSource(micStreamRef.current);\r\n      \r\n      // Create gain node for volume control\r\n      gainNodeRef.current = audioContextRef.current.createGain();\r\n      gainNodeRef.current.gain.value = volume;\r\n      \r\n      // Create analyzer for level meter\r\n      analyserRef.current = audioContextRef.current.createAnalyser();\r\n      analyserRef.current.fftSize = 256;\r\n      \r\n      // Connect nodes: mic -> gain -> analyzer -> output\r\n      micSourceRef.current.connect(gainNodeRef.current);\r\n      gainNodeRef.current.connect(analyserRef.current);\r\n      gainNodeRef.current.connect(audioContextRef.current.destination);\r\n      \r\n      // Start level meter visualization\r\n      updateLevelMeter();\r\n      \r\n      // Update UI\r\n      setIsActive(true);\r\n      setStatus('Microphone active - sending to speaker');\r\n      setError(false);\r\n    } catch (err) {\r\n      console.error('Error accessing microphone:', err);\r\n      setStatus(`Error: ${err.message}`);\r\n      setError(true);\r\n      setIsActive(false);\r\n    }\r\n  };\r\n\r\n  // Stop audio processing\r\n  const stopAudio = () => {\r\n    if (micStreamRef.current) {\r\n      micStreamRef.current.getTracks().forEach(track => track.stop());\r\n    }\r\n    \r\n    if (audioContextRef.current) {\r\n      audioContextRef.current.close();\r\n    }\r\n    \r\n    // Cancel animation frame\r\n    if (animationFrameRef.current) {\r\n      cancelAnimationFrame(animationFrameRef.current);\r\n      animationFrameRef.current = null;\r\n    }\r\n    \r\n    // Reset variables\r\n    audioContextRef.current = null;\r\n    micStreamRef.current = null;\r\n    micSourceRef.current = null;\r\n    gainNodeRef.current = null;\r\n    analyserRef.current = null;\r\n    \r\n    // Update UI\r\n    setIsActive(false);\r\n    setStatus('Ready to connect');\r\n    setError(false);\r\n    setLevel(0);\r\n  };\r\n\r\n  // Update level meter based on mic input\r\n  const updateLevelMeter = () => {\r\n    if (!analyserRef.current || !isActive) return;\r\n    \r\n    const bufferLength = analyserRef.current.frequencyBinCount;\r\n    const dataArray = new Uint8Array(bufferLength);\r\n    \r\n    const draw = () => {\r\n      animationFrameRef.current = requestAnimationFrame(draw);\r\n      \r\n      analyserRef.current.getByteFrequencyData(dataArray);\r\n      \r\n      // Calculate volume level (average of all frequencies)\r\n      let sum = 0;\r\n      for (let i = 0; i < bufferLength; i++) {\r\n        sum += dataArray[i];\r\n      }\r\n      const average = sum / bufferLength;\r\n      \r\n      // Update level meter (0-100%)\r\n      const newLevel = Math.min(100, Math.max(0, average * 100 / 256));\r\n      setLevel(newLevel);\r\n    };\r\n    \r\n    draw();\r\n  };\r\n\r\n  // Toggle mic on/off\r\n  const toggleMicrophone = () => {\r\n    if (isActive) {\r\n      stopAudio();\r\n    } else {\r\n      startAudio();\r\n    }\r\n  };\r\n\r\n  // Update volume when slider changes\r\n  useEffect(() => {\r\n    if (gainNodeRef.current) {\r\n      gainNodeRef.current.gain.value = volume;\r\n    }\r\n  }, [volume]);\r\n\r\n  // Handle page visibility changes\r\n  useEffect(() => {\r\n    const handleVisibilityChange = () => {\r\n      if (document.hidden && isActive) {\r\n        stopAudio();\r\n        setStatus('Paused - return to this page to resume');\r\n      }\r\n    };\r\n\r\n    document.addEventListener('visibilitychange', handleVisibilityChange);\r\n    \r\n    return () => {\r\n      document.removeEventListener('visibilitychange', handleVisibilityChange);\r\n    };\r\n  }, [isActive]);\r\n\r\n  // Clean up on unmount\r\n  useEffect(() => {\r\n    return () => {\r\n      if (isActive) {\r\n        stopAudio();\r\n      }\r\n    };\r\n  }, [isActive]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Phone Mic to Speaker</h1>\r\n      \r\n      <div className={`status ${isActive ? 'connected' : ''} ${error ? 'error' : ''}`}>\r\n        {status}\r\n      </div>\r\n      \r\n      <button \r\n        className={`mic-button ${isActive ? 'recording' : ''}`} \r\n        onClick={toggleMicrophone}\r\n      >\r\n        <svg className=\"mic-icon\" viewBox=\"0 0 24 24\">\r\n          <path d=\"M12,2A3,3 0 0,1 15,5V11A3,3 0 0,1 12,14A3,3 0 0,1 9,11V5A3,3 0 0,1 12,2M19,11C19,14.53 16.39,17.44 13,17.93V21H11V17.93C7.61,17.44 5,14.53 5,11H7A5,5 0 0,0 12,16A5,5 0 0,0 17,11H19Z\" />\r\n        </svg>\r\n      </button>\r\n      \r\n      <div className=\"level-meter\">\r\n        <div className=\"level-fill\" style={{ width: `${level}%` }}></div>\r\n      </div>\r\n      \r\n      <div className=\"volume-control\">\r\n        <label htmlFor=\"volumeSlider\">Microphone Volume</label>\r\n        <input \r\n          type=\"range\" \r\n          min=\"0\" \r\n          max=\"2\" \r\n          step=\"0.1\" \r\n          value={volume} \r\n          className=\"volume-slider\" \r\n          id=\"volumeSlider\" \r\n          onChange={(e) => setVolume(parseFloat(e.target.value))}\r\n        />\r\n      </div>\r\n      \r\n      <div className=\"instructions\">\r\n        <h3>How to use:</h3>\r\n        <ul>\r\n          <li>Connect your Bluetooth/USB/aux speaker to your device</li>\r\n          <li>Tap the microphone button to start/stop</li>\r\n          <li>Adjust the volume slider as needed</li>\r\n          <li>Your microphone input will play through the connected speaker</li>\r\n        </ul>\r\n      </div>\r\n      \r\n      <footer>\r\n        Note: On mobile devices, this will only work while this page is open and active.\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}